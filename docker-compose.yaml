services:
  db:
    image: pgvector/pgvector:pg17
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-app_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/app:/app/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network
    # Add --proxy-headers flag to Uvicorn command
    command: >
      sh -c "alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/app --proxy-headers"
    restart: unless-stopped

  worker:
    build:
      context: ./backend
    container_name: saq_worker
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/app:/app/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network
    command: watchfiles "saq app.worker.settings.settings" /app/app
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      target: development
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost
      - VITE_WEBSITE_DOMAIN=http://localhost
      - VITE_APP_NAME=AI Video Platform
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - app_network
    command: npm run dev -- --host
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./reverse-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - app_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  nginx_logs:

networks:
  app_network:
    driver: bridge
