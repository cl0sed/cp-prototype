"""Initial schema

Revision ID: fd58ac4f60fb
Revises:
Create Date: 2025-04-21 11:41:56.839191

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# Ensure all necessary types are imported here if needed globally
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "fd58ac4f60fb"  # pragma: allowlist secret
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    op.create_table(
        "users",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("supertokens_user_id", sa.String(), nullable=True),
        sa.Column("username", sa.String(length=50), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("role", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_created_at"), "users", ["created_at"], unique=False)
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_role"), "users", ["role"], unique=False)
    op.create_index(
        op.f("ix_users_supertokens_user_id"),
        "users",
        ["supertokens_user_id"],
        unique=True,
    )
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "videos",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("creative_brief", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_videos_created_at"), "videos", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_videos_status"), "videos", ["status"], unique=False)
    op.create_index(
        op.f("ix_videos_updated_at"), "videos", ["updated_at"], unique=False
    )
    op.create_table(
        "background_jobs",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("job_type", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column(
            "parameters", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("result", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("completed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"], ["videos.id"], ondelete="CASCADE", use_alter=True
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_background_jobs_completed_at"),
        "background_jobs",
        ["completed_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_background_jobs_created_at"),
        "background_jobs",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_background_jobs_job_type"),
        "background_jobs",
        ["job_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_background_jobs_project_id"),
        "background_jobs",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_background_jobs_status"), "background_jobs", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_background_jobs_updated_at"),
        "background_jobs",
        ["updated_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_background_jobs_user_id"), "background_jobs", ["user_id"], unique=False
    )
    op.create_table(
        "chat_messages",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "timestamp",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("metadata_", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_chat_message_session_timestamp",
        "chat_messages",
        ["session_id", "timestamp"],
        unique=False,
    )
    op.create_index(
        "ix_chat_message_user_timestamp",
        "chat_messages",
        ["user_id", "timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("ix_chat_messages_timestamp"), "chat_messages", ["timestamp"], unique=False
    )
    op.create_index(
        op.f("ix_chat_messages_user_id"), "chat_messages", ["user_id"], unique=False
    )
    op.create_table(
        "user_videos",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("video_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["video_id"], ["videos.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "video_id"),
    )
    op.create_index(
        op.f("ix_user_videos_created_at"), "user_videos", ["created_at"], unique=False
    )
    # ### end Alembic commands ###
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_videos_created_at"), table_name="user_videos")
    op.drop_table("user_videos")
    op.drop_index(op.f("ix_chat_messages_user_id"), table_name="chat_messages")
    op.drop_index(op.f("ix_chat_messages_timestamp"), table_name="chat_messages")
    op.drop_index("ix_chat_message_user_timestamp", table_name="chat_messages")
    op.drop_index("ix_chat_message_session_timestamp", table_name="chat_messages")
    op.drop_table("chat_messages")
    op.drop_index(op.f("ix_background_jobs_user_id"), table_name="background_jobs")
    op.drop_index(op.f("ix_background_jobs_updated_at"), table_name="background_jobs")
    op.drop_index(op.f("ix_background_jobs_status"), table_name="background_jobs")
    op.drop_index(op.f("ix_background_jobs_project_id"), table_name="background_jobs")
    op.drop_index(op.f("ix_background_jobs_job_type"), table_name="background_jobs")
    op.drop_index(op.f("ix_background_jobs_created_at"), table_name="background_jobs")
    op.drop_index(op.f("ix_background_jobs_completed_at"), table_name="background_jobs")
    op.drop_table("background_jobs")
    op.drop_index(op.f("ix_videos_updated_at"), table_name="videos")
    op.drop_index(op.f("ix_videos_status"), table_name="videos")
    op.drop_index(op.f("ix_videos_created_at"), table_name="videos")
    op.drop_table("videos")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_supertokens_user_id"), table_name="users")
    op.drop_index(op.f("ix_users_role"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_created_at"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
    # ### end Alembic commands ###
